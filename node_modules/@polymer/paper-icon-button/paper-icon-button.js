define(["../polymer/polymer-legacy.js", "../iron-icon/iron-icon.js", "../paper-behaviors/paper-inky-focus-behavior.js", "../paper-styles/default-theme.js", "../polymer/lib/legacy/polymer-fn.js"], function (_polymerLegacy, _ironIcon, _paperInkyFocusBehavior, _defaultTheme, _polymerFn) {
  "use strict";

  /**
  @license
  Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */

  /**
  Material design: [Icon toggles](https://www.google.com/design/spec/components/buttons.html#buttons-toggle-buttons)
  
  `paper-icon-button` is a button with an image placed at the center. When the user touches
  the button, a ripple effect emanates from the center of the button.
  
  `paper-icon-button` does not include a default icon set. To use icons from the default
  set, include `PolymerElements/iron-icons/iron-icons.html`, and use the `icon` attribute to specify which icon
  from the icon set to use.
  
      <paper-icon-button icon="menu"></paper-icon-button>
  
  See [`iron-iconset`](iron-iconset) for more information about
  how to use a custom icon set.
  
  Example:
  
      <link href="path/to/iron-icons/iron-icons.html" rel="import">
  
      <paper-icon-button icon="favorite"></paper-icon-button>
      <paper-icon-button src="star.png"></paper-icon-button>
  
  To use `paper-icon-button` as a link, wrap it in an anchor tag. Since `paper-icon-button`
  will already receive focus, you may want to prevent the anchor tag from receiving focus
  as well by setting its tabindex to -1.
  
      <a href="https://www.polymer-project.org" tabindex="-1">
        <paper-icon-button icon="polymer"></paper-icon-button>
      </a>
  
  ### Styling
  
  Style the button with CSS as you would a normal DOM element. If you are using the icons
  provided by `iron-icons`, they will inherit the foreground color of the button.
  
      /* make a red "favorite" button *\/
      <paper-icon-button icon="favorite" style="color: red;"></paper-icon-button>
  
  By default, the ripple is the same color as the foreground at 25% opacity. You may
  customize the color using the `--paper-icon-button-ink-color` custom property.
  
  The following custom properties and mixins are available for styling:
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--paper-icon-button-disabled-text` | The color of the disabled button | `--disabled-text-color`
  `--paper-icon-button-ink-color` | Selected/focus ripple color | `--primary-text-color`
  `--paper-icon-button` | Mixin for a button | `{}`
  `--paper-icon-button-disabled` | Mixin for a disabled button | `{}`
  `--paper-icon-button-hover` | Mixin for button on hover | `{}`
  
  @group Paper Elements
  @element paper-icon-button
  @demo demo/index.html
  */

  /*
    FIXME(polymer-modulizer): the above comments were extracted
    from HTML and may be out of place here. Review them and
    then delete this comment!
  */
  var $_documentContainer = document.createElement('template');
  $_documentContainer.setAttribute('style', 'display: none;');
  $_documentContainer.innerHTML = "<dom-module id=\"paper-icon-button\">\n  <template strip-whitespace=\"\">\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        padding: 8px;\n        outline: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        z-index: 0;\n        line-height: 1;\n\n        width: 40px;\n        height: 40px;\n\n        /* NOTE: Both values are needed, since some phones require the value to be `transparent`. */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -webkit-tap-highlight-color: transparent;\n\n        /* Because of polymer/2558, this style has lower specificity than * */\n        box-sizing: border-box !important;\n\n        @apply --paper-icon-button;\n      }\n\n      :host #ink {\n        color: var(--paper-icon-button-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n      }\n\n      :host([disabled]) {\n        color: var(--paper-icon-button-disabled-text, var(--disabled-text-color));\n        pointer-events: none;\n        cursor: auto;\n\n        @apply --paper-icon-button-disabled;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:hover) {\n        @apply --paper-icon-button-hover;\n      }\n\n      iron-icon {\n        --iron-icon-width: 100%;\n        --iron-icon-height: 100%;\n      }\n    </style>\n\n    <iron-icon id=\"icon\" src=\"[[src]]\" icon=\"[[icon]]\" alt$=\"[[alt]]\"></iron-icon>\n  </template>\n\n  \n</dom-module>";
  document.head.appendChild($_documentContainer.content);
  (0, _polymerFn.Polymer)({
    is: 'paper-icon-button',
    hostAttributes: {
      role: 'button',
      tabindex: '0'
    },
    behaviors: [_paperInkyFocusBehavior.PaperInkyFocusBehavior],
    properties: {
      /**
       * The URL of an image for the icon. If the src property is specified,
       * the icon property should not be.
       */
      src: {
        type: String
      },

      /**
       * Specifies the icon name or index in the set of icons available in
       * the icon's icon set. If the icon property is specified,
       * the src property should not be.
       */
      icon: {
        type: String
      },

      /**
       * Specifies the alternate text for the button, for accessibility.
       */
      alt: {
        type: String,
        observer: '_altChanged'
      }
    },
    _altChanged: function _altChanged(newValue, oldValue) {
      var label = this.getAttribute('aria-label'); // Don't stomp over a user-set aria-label.

      if (!label || oldValue == label) {
        this.setAttribute('aria-label', newValue);
      }
    }
  });
});